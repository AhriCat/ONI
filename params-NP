class params(layer_size, ff_multiplier, num_heads):
    def initialize_parameters(layer_size, ff_multiplier=4, num_heads=8):
        params = {}
        head_dim = layer_size // num_heads
        # Initialize weights for multi-head attention
        params['wq'] = [np.random.randn(layer_size, head_dim) for _ in range(num_heads)]
        params['wk'] = [np.random.randn(layer_size, head_dim) for _ in range(num_heads)]
        params['wv'] = [np.random.randn(layer_size, head_dim) for _ in range(num_heads)]
        # Feed-forward network parameters
        params['w1'] = np.random.randn(layer_size, layer_size * ff_multiplier)
        params['b1'] = np.random.randn(layer_size * ff_multiplier)
        params['w2'] = np.random.randn(layer_size * ff_multiplier, layer_size)
        params['b2'] = np.random.randn(layer_size)
        return params

    params = initialize_parameters(layer_size=64)
